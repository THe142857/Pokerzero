version: "3.9"
services:
  # Postgres database
  db:
    extends:
      file: common-compose.yml
      service: db
  # Frontend and backend
  website:
    build:
      context: .
      dockerfile: ./website/Dockerfile
    depends_on:
      - db
      - sqs
    extends:
      file: common-compose.yml
      service: website
    ports:
      - 3000:3000
  gameplay:
    build:
      context: .
      dockerfile: ./workers/gameplay/Dockerfile
    depends_on:
      - sqs
    restart: always
    extends:
      file: common-compose.yml
      service: gameplay
  builder:
    build:
      context: .
      dockerfile: ./workers/builder/Dockerfile
    depends_on:
      - sqs
    restart: always
    extends:
      file: common-compose.yml
      service: builder
  results:
    build:
      context: .
      dockerfile: ./workers/results/Dockerfile
    depends_on:
      - db
      - sqs
    restart: always
    extends:
      file: common-compose.yml
      service: results
  s3:
    extends:
      file: common-compose.yml
      service: s3
  createbuckets:
    depends_on:
      - s3
    extends:
      file: common-compose.yml
      service: createbuckets

  sqs:
    extends:
      file: common-compose.yml
      service: sqs

  nginx:
    image: nginx
    depends_on:
      - sqs
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./.volumes/certbot/conf:/etc/letsencrypt
      - ./.volumes/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - 80:80
      - 443:443
      - 9000:9000

  certbot:
    image: certbot/certbot
    volumes:
      - ./.volumes/certbot/conf:/etc/letsencrypt
      - ./.volumes/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  database:
    external: false
  minio:
    external: false

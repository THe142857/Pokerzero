version: "3.9"
services:
  db:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: postgres:14
    user: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=postgres
    volumes:
      - ./.volumes/database:/var/lib/postgresql/data
  website:
    build: 
      context: .
      dockerfile: ./Dockerfile.website
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_URL=db:5432/postgres
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_TENANT_ID=${MICROSOFT_TENANT_ID}
      - REDIRECT_URI=http://localhost:3000/api/login

      - APP_PFP_S3_BUCKET=pokerbots-pfp
      - BOT_S3_BUCKET=pokerbots-bots
      - BOT_SIZE=5000000
      - APP_PFP_ENDPOINT=https://pokerbots-pfp.s3.us-east-1.amazonaws.com

      - AZURE_SECRET=${AZURE_SECRET}
      - SECRET_KEY=${SECRET_KEY}

      - AMQP_URL=amqp://rabbitmq
  worker:
    build: 
      context: .
      dockerfile: ./Dockerfile.worker
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - AMQP_URL=amqp://rabbitmq
  nginx:
    image: nginx:latest
    depends_on:
      - website
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 3000:3000
  rabbitmq:
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./.volumes/rabbitmq:/data

// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]


use chrono::NaiveDateTime;
use uuid::Uuid;
#[derive(Queryable, Debug, Identifiable)]
pub struct Auth {
    pub email: String,
    pub mangled_password: Option<String>,
    pub email_verification_link: Option<String>,
    pub email_verification_link_expiration: Option<NaiveDateTime>,
    pub password_reset_link: Option<String>,
    pub password_reset_link_expiration: Option<NaiveDateTime>,
    pub email_confirmed: bool,
    pub is_admin: bool,
    pub id: Uuid,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct Bot {
    pub id: i32,
    pub team: i32,
    pub name: String,
    pub description: Option<String>,
    pub created: i64,
    pub uploaded_by: Uuid,
    pub build_status: i32,
    pub deleted_at: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct GameResult {
    pub id: String,
    pub challenger_rating_change: f32,
    pub defender_rating_change: f32,
    pub defender_score: i32,
    pub challenger_score: i32,
    pub error_type: Option<String>,
    pub error_bot: Option<i32>,
    pub updated_at: i64,
    pub defender_rating: f32,
    pub challenger_rating: f32,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(game_id, step))]
pub struct GameState {
    pub game_id: String,
    pub step: i32,
    pub challenger_stack: i32,
    pub defender_stack: i32,
    pub challenger_pushed: i32,
    pub defender_pushed: i32,
    pub challenger_hand: String,
    pub defender_hand: String,
    pub flop: Option<String>,
    pub turn: Option<String>,
    pub river: Option<String>,
    pub button: String,
    pub sb: String,
    pub action_time: i32,
    pub last_action: String,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct Game {
    pub id: String,
    pub defender: i32,
    pub challenger: i32,
    pub created: i64,
    pub defender_rating: f32,
    pub challenger_rating: f32,
    pub rated: bool,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(code))]
pub struct TeamInvite {
    pub code: String,
    pub team: i32,
    pub expires: i64,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct Team {
    pub id: i32,
    pub name: String,
    pub owner: Uuid,
    pub active_bot: Option<i32>,
    pub deleted_at: Option<i64>,
    pub rating: f32,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct UserProfile {
    pub first_name: String,
    pub last_name: String,
    pub country: Option<String>,
    pub school: String,
    pub linkedin: Option<String>,
    pub github: Option<String>,
    pub id: Uuid,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct User {
    pub display_name: String,
    pub team: Option<i32>,
    pub id: Uuid,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct Auth {
    pub email: String,
    pub mangled_password: Option<String>,
    pub email_verification_link: Option<String>,
    pub email_verification_link_expiration: Option<NaiveDateTime>,
    pub password_reset_link: Option<String>,
    pub password_reset_link_expiration: Option<NaiveDateTime>,
    pub email_confirmed: bool,
    pub is_admin: bool,
    pub id: Uuid,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct Bot {
    pub id: i32,
    pub team: i32,
    pub name: String,
    pub description: Option<String>,
    pub created: i64,
    pub uploaded_by: Uuid,
    pub build_status: i32,
    pub deleted_at: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct GameResult {
    pub id: String,
    pub challenger_rating_change: f32,
    pub defender_rating_change: f32,
    pub defender_score: i32,
    pub challenger_score: i32,
    pub error_type: Option<String>,
    pub error_bot: Option<i32>,
    pub updated_at: i64,
    pub defender_rating: f32,
    pub challenger_rating: f32,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(game_id, step))]
pub struct GameState {
    pub game_id: String,
    pub step: i32,
    pub challenger_stack: i32,
    pub defender_stack: i32,
    pub challenger_pushed: i32,
    pub defender_pushed: i32,
    pub challenger_hand: String,
    pub defender_hand: String,
    pub flop: Option<String>,
    pub turn: Option<String>,
    pub river: Option<String>,
    pub button: String,
    pub sb: String,
    pub action_time: i32,
    pub last_action: String,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct Game {
    pub id: String,
    pub defender: i32,
    pub challenger: i32,
    pub created: i64,
    pub defender_rating: f32,
    pub challenger_rating: f32,
    pub rated: bool,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(code))]
pub struct TeamInvite {
    pub code: String,
    pub team: i32,
    pub expires: i64,
}

#[derive(Queryable, Debug)]
pub struct Team {
    pub id: i32,
    pub name: String,
    pub owner: Uuid,
    pub active_bot: Option<i32>,
    pub deleted_at: Option<i64>,
    pub rating: f32,
}

#[derive(Queryable, Debug)]
pub struct UserProfile {
    pub first_name: String,
    pub last_name: String,
    pub country: Option<String>,
    pub school: String,
    pub linkedin: Option<String>,
    pub github: Option<String>,
    pub id: Uuid,
}

#[derive(Queryable, Debug)]
pub struct User {
    pub display_name: String,
    pub team: Option<i32>,
    pub id: Uuid,
}

